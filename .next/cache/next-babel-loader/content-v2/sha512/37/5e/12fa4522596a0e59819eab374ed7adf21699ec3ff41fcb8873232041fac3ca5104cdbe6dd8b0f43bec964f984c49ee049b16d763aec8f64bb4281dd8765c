{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/syeefkarim/Developer/syeefkarim-2021/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/syeefkarim/Developer/syeefkarim-2021/_includes/theme.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// import { useTheme } from \"next-themes\";\n// export const ThemeChanger = () => {\n//   const { theme, setTheme } = useTheme();\n//   return (\n//     <div>\n//       The current theme is: {theme}\n//       <button onClick={() => setTheme(\"light\")}>Light Mode</button>\n//       <button onClick={() => setTheme(\"dark\")}>Dark Mode</button>\n//     </div>\n//   );\n// };\nimport { useTheme } from \"next-themes\";\nexport var ThemeChanger = function ThemeChanger() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      mounted = _useState2[0],\n      setMounted = _useState2[1];\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme,\n      setTheme = _useTheme.setTheme; // When mounted on client, now we can show the UI\n\n\n  useEffect(function () {\n    return setMounted(true);\n  }, []);\n  if (!mounted) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"The current theme is: \", theme, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setTheme(\"light\");\n      },\n      children: \"Light Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return setTheme(\"dark\");\n      },\n      children: \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ThemeChanger, \"CybB+IJKIQO7hXpeRHYgsUfxw+s=\", false, function () {\n  return [useTheme];\n});\n\n_c = ThemeChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeChanger\");","map":{"version":3,"sources":["/Users/syeefkarim/Developer/syeefkarim-2021/_includes/theme.js"],"names":["useTheme","ThemeChanger","useState","mounted","setMounted","theme","setTheme","useEffect"],"mappings":";;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,aAAzB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,kBACFC,QAAQ,CAAC,KAAD,CADN;AAAA;AAAA,MACzBC,OADyB;AAAA,MAChBC,UADgB;;AAAA,kBAEJJ,QAAQ,EAFJ;AAAA,MAExBK,KAFwB,aAExBA,KAFwB;AAAA,MAEjBC,QAFiB,aAEjBA,QAFiB,EAIhC;;;AACAC,EAAAA,SAAS,CAAC;AAAA,WAAMH,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAD,EAAyB,EAAzB,CAAT;AAEA,MAAI,CAACD,OAAL,EAAc,OAAO,IAAP;AAEd,sBACE;AAAA,yCACyBE,KADzB,eAEE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMC,QAAQ,CAAC,OAAD,CAAd;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMA,QAAQ,CAAC,MAAD,CAAd;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAhBM;;GAAML,Y;UAEiBD,Q;;;KAFjBC,Y","sourcesContent":["// import { useTheme } from \"next-themes\";\n\n// export const ThemeChanger = () => {\n//   const { theme, setTheme } = useTheme();\n\n//   return (\n//     <div>\n//       The current theme is: {theme}\n//       <button onClick={() => setTheme(\"light\")}>Light Mode</button>\n//       <button onClick={() => setTheme(\"dark\")}>Dark Mode</button>\n//     </div>\n//   );\n// };\n\nimport { useTheme } from \"next-themes\";\n\nexport const ThemeChanger = () => {\n  const [mounted, setMounted] = useState(false);\n  const { theme, setTheme } = useTheme();\n\n  // When mounted on client, now we can show the UI\n  useEffect(() => setMounted(true), []);\n\n  if (!mounted) return null;\n\n  return (\n    <div>\n      The current theme is: {theme}\n      <button onClick={() => setTheme(\"light\")}>Light Mode</button>\n      <button onClick={() => setTheme(\"dark\")}>Dark Mode</button>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}