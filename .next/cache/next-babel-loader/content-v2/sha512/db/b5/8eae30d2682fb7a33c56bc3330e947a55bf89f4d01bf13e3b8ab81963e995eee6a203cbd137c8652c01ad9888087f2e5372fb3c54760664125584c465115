{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// import { useTheme } from \"next-themes\";\n// export const ThemeChanger = () => {\n//   const { theme, setTheme } = useTheme();\n//   return (\n//     <div>\n//       The current theme is: {theme}\n//       <button onClick={() => setTheme(\"light\")}>Light Mode</button>\n//       <button onClick={() => setTheme(\"dark\")}>Dark Mode</button>\n//     </div>\n//   );\n// };\nimport { useTheme } from \"next-themes\";\nimport { useState, useEffect } from \"react\";\nexport const ThemeChanger = () => {\n  const {\n    0: mounted,\n    1: setMounted\n  } = useState(false);\n  const {\n    theme,\n    setTheme,\n    resolvedTheme\n  } = useTheme(); // When mounted on client, now we can show the UI\n\n  useEffect(() => setMounted(true), []);\n  if (!mounted) return null;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [\"The current theme is: \", theme, /*#__PURE__*/_jsx(\"button\", {\n      onClick: () => setTheme(\"light\"),\n      children: \"Light Mode\"\n    }), /*#__PURE__*/_jsx(\"button\", {\n      onClick: () => setTheme(\"dark\"),\n      children: \"Dark Mode\"\n    })]\n  }) // <div style={{ color: resolvedTheme === 'dark' ? white : black }}>\n  ;\n};","map":null,"metadata":{},"sourceType":"module"}