{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport AboutLayout from \"@layouts/about\";\nimport Link from \"next/link\";\nimport Work from \"@includes/work\";\nimport { getConfig, getAllPosts } from \"@api\";\nimport { ResponsiveContainer, AreaChart, XAxis, YAxis, Area, Tooltip, CartesianGrid } from \"recharts\";\nimport { format, parseISO, subDays } from \"date-fns\";\nimport styles from \"@layouts/about.module.scss\"; // const endpoint = \"https://api.coindesk.com/v1/bpi/historical/close.json\";\n// const endpoint = \"https://jsonplaceholder.typicode.com/todos\";\n// export async function getServerSideProps() {\n//   const res = await fetch(\n//     \"https://api.coindesk.com/v1/bpi/historical/close.json\"\n//   );\n//   const data = await res.json();\n//   return {\n//     props: {\n//       data,\n//     },\n//   };\n// }\n\nvar data1 = [];\n\nfor (var num = 30; num >= 0; num--) {\n  data1.push({\n    date: subDays(new Date(), num).toISOString().substr(0, 10),\n    value: 1 + Math.random()\n  });\n}\n\nfunction CustomTooltip(_ref) {\n  var active = _ref.active,\n      payload = _ref.payload,\n      label = _ref.label;\n\n  if (active) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"tooltip\",\n      children: [/*#__PURE__*/_jsx(\"h4\", {\n        children: format(parseISO(label), \"eeee, d MMM, yyyy\")\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"$\", payload[0].value.toFixed(2), \" USD\"]\n      })]\n    });\n  }\n\n  return null;\n}\n\nexport default function Charts(props) {\n  return /*#__PURE__*/_jsx(AboutLayout, {\n    title: props.title,\n    description: props.description,\n    children: /*#__PURE__*/_jsxs(\"section\", {\n      children: [/*#__PURE__*/_jsx(\"h5\", {\n        children: \"Test\"\n      }), /*#__PURE__*/_jsx(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxs(AreaChart, {\n          data: data1,\n          children: [/*#__PURE__*/_jsxs(\"defs\", {\n            children: [/*#__PURE__*/_jsxs(\"linearGradient\", {\n              id: \"strokeColor\",\n              x1: \"0\",\n              y1: \"0\",\n              x2: \"1\",\n              y2: \"0\",\n              children: [/*#__PURE__*/_jsx(\"stop\", {\n                offset: \"0%\",\n                stopColor: \"#B4AFF5\",\n                stopOpacity: 1\n              }), /*#__PURE__*/_jsx(\"stop\", {\n                offset: \"14%\",\n                stopColor: \"#C1BAEF\",\n                stopOpacity: 1\n              }), /*#__PURE__*/_jsx(\"stop\", {\n                offset: \"28%\",\n                stopColor: \"#D8CBE6\",\n                stopOpacity: 1\n              }), /*#__PURE__*/_jsx(\"stop\", {\n                offset: \"42%\",\n                stopColor: \"#DECAD7\",\n                stopOpacity: 1\n              }), /*#__PURE__*/_jsx(\"stop\", {\n                offset: \"56%\",\n                stopColor: \"#E6C6C4\",\n                stopOpacity: 1\n              }), /*#__PURE__*/_jsx(\"stop\", {\n                offset: \"70%\",\n                stopColor: \"#EBC0B1\",\n                stopOpacity: 1\n              }), /*#__PURE__*/_jsx(\"stop\", {\n                offset: \"100%\",\n                stopColor: \"#EBBDA9\",\n                stopOpacity: 1\n              })]\n            }), /*#__PURE__*/_jsxs(\"linearGradient\", {\n              id: \"color\",\n              x1: \"0\",\n              y1: \"0\",\n              x2: \"0\",\n              y2: \"1\",\n              children: [/*#__PURE__*/_jsx(\"stop\", {\n                offset: \"0%\",\n                stopColor: \"#2451B7\",\n                stopOpacity: 0.4\n              }), /*#__PURE__*/_jsx(\"stop\", {\n                offset: \"75%\",\n                stopColor: \"#2451B7\",\n                stopOpacity: 0.05\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(Area, {\n            dataKey: \"value\",\n            stroke: \"url(#strokeColor)\",\n            fill: \"url(#color)\"\n          }), /*#__PURE__*/_jsx(XAxis, {\n            dataKey: \"date\",\n            axisLine: false,\n            tickLine: false,\n            tickFormatter: function tickFormatter(str) {\n              var date = parseISO(str);\n\n              if (date.getDate()) {\n                return format(date, \"MMM, d\");\n              }\n\n              return \"\";\n            }\n          }), /*#__PURE__*/_jsx(YAxis, {\n            datakey: \"value\",\n            axisLine: false,\n            tickLine: false,\n            tickCount: 8,\n            tickFormatter: function tickFormatter(number) {\n              return \"$\".concat(number.toFixed(2));\n            }\n          }), /*#__PURE__*/_jsx(Tooltip, {\n            content: /*#__PURE__*/_jsx(CustomTooltip, {})\n          }), /*#__PURE__*/_jsx(CartesianGrid, {\n            opacity: 0.1,\n            vertical: false\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"This isn't using a proper API yet, that's the next step. I also want the tooltip to stay in one place on the yAxis.\"\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}