{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Group } from \"@vx/group\";\nimport { AreaClosed, LinePath, Bar } from \"@vx/shape\";\nimport { withParentSize } from \"@vx/responsive\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nimport { LinearGradient } from \"@vx/gradient\";\nimport { PatternLines } from \"@vx/pattern\";\nimport { AxisBottom } from \"@vx/axis\";\nimport { withTooltip } from \"@vx/tooltip\";\nimport { localPoint } from \"@vx/event\";\nimport { bisector } from \"d3-array\";\nimport Tooltips from \"./tooltips\";\nimport HoverLine from \"./hoverline\";\nimport MaxPrice from \"./maxprice\";\nimport MinPrice from \"./minprice\";\nimport formatPrice from \"../utils/formatPrice\";\nimport formatDate from \"../utils/formatDate\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      data,\n      parentWidth = 600,\n      parentHeight = 400,\n      margin = {},\n      tooltipData,\n      tooltipLeft,\n      tooltipTop,\n      showTooltip,\n      hideTooltip\n    } = this.props;\n    const width = parentWidth - margin.left - margin.right;\n    const height = parentHeight - margin.top - margin.bottom;\n\n    const x = d => new Date(d.time);\n\n    const y = d => d.price;\n\n    const bisectDate = bisector(d => x(d)).left;\n    const firstPoint = data[0];\n    const currentPoint = data[data.length - 1];\n    const minPrice = Math.min(...data.map(y));\n    const maxPrice = Math.max(...data.map(y));\n    const firstPrice = y(firstPoint);\n    const currentPrice = y(currentPoint);\n    const maxData = [{\n      time: x(firstPoint),\n      price: maxPrice\n    }, {\n      time: x(currentPoint),\n      price: maxPrice\n    }];\n    const minData = [{\n      time: x(firstPoint),\n      price: minPrice\n    }, {\n      time: x(currentPoint),\n      price: minPrice\n    }];\n    const xScale = scaleTime({\n      range: [0, width],\n      domain: [x(firstPoint), x(currentPoint)]\n    });\n    const yScale = scaleLinear({\n      range: [height, 0],\n      domain: [minPrice, maxPrice + 100]\n    });\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsxs(\"svg\", {\n        ref: s => this.svg = s,\n        width: parentWidth,\n        height: parentHeight,\n        children: [/*#__PURE__*/_jsx(LinearGradient, {\n          id: \"fill\",\n          from: \"#6086d6\",\n          to: \"#6086d6\",\n          fromOpacity: 0.2,\n          toOpacity: 0\n        }), /*#__PURE__*/_jsx(PatternLines, {\n          id: \"dLines\",\n          height: 6,\n          width: 6,\n          stroke: \"#27273f\",\n          strokeWidth: 1,\n          orientation: [\"diagonal\"]\n        }), /*#__PURE__*/_jsxs(Group, {\n          top: margin.top,\n          left: margin.left,\n          children: [/*#__PURE__*/_jsx(AxisBottom, {\n            data: data,\n            scale: xScale,\n            x: x,\n            top: height,\n            left: margin.left + 18,\n            numTicks: 3,\n            hideTicks: true,\n            hideAxisLine: true,\n            tickLabelComponent: /*#__PURE__*/_jsx(\"text\", {\n              fill: \"#ffffff\",\n              dy: \".33em\",\n              fillOpacity: 0.3,\n              fontSize: 11,\n              textAnchor: \"middle\"\n            })\n          }), /*#__PURE__*/_jsx(MaxPrice, {\n            data: maxData,\n            yText: yScale(maxPrice),\n            label: formatPrice(maxPrice),\n            yScale: yScale,\n            xScale: xScale,\n            x: x,\n            y: y\n          }), /*#__PURE__*/_jsx(AreaClosed, {\n            stroke: \"transparent\",\n            data: data,\n            yScale: yScale,\n            xScale: xScale,\n            x: x,\n            y: y,\n            fill: \"url(#fill)\"\n          }), /*#__PURE__*/_jsx(AreaClosed, {\n            stroke: \"transparent\",\n            data: data,\n            yScale: yScale,\n            xScale: xScale,\n            x: x,\n            y: y,\n            fill: \"url(#dLines)\"\n          }), /*#__PURE__*/_jsx(LinePath, {\n            data: data,\n            yScale: yScale,\n            xScale: xScale,\n            y: y,\n            x: x,\n            stroke: \"#6086d6\",\n            strokeOpacity: \"0.8\",\n            strokeWidth: 1\n          }), /*#__PURE__*/_jsx(MinPrice, {\n            data: minData,\n            yScale: yScale,\n            xScale: xScale,\n            y: y,\n            x: x,\n            yText: yScale(minPrice),\n            label: formatPrice(minPrice)\n          }), /*#__PURE__*/_jsx(Bar, {\n            data: data,\n            width: width,\n            height: height - margin.bottom,\n            fill: \"transparent\",\n            onMouseLeave: data => event => hideTooltip(),\n            onMouseMove: data => event => {\n              const {\n                x: xPoint\n              } = localPoint(this.svg, event);\n              const x0 = xScale.invert(xPoint);\n              const index = bisectDate(data, x0, 1);\n              const d0 = data[index - 1];\n              const d1 = data[index];\n              const d = x0 - xScale(x(d0)) > xScale(x(d1)) - x0 ? d1 : d0;\n              showTooltip({\n                tooltipData: d,\n                tooltipLeft: xScale(x(d)),\n                tooltipTop: yScale(y(d))\n              });\n            }\n          })]\n        }), tooltipData && /*#__PURE__*/_jsx(HoverLine, {\n          from: {\n            x: tooltipLeft,\n            y: yScale(y(maxData[0]))\n          },\n          to: {\n            x: tooltipLeft,\n            y: yScale(y(minData[0]))\n          },\n          tooltipLeft: tooltipLeft,\n          tooltipTop: tooltipTop\n        })]\n      }), tooltipData && /*#__PURE__*/_jsx(Tooltips, {\n        yTop: tooltipTop - 12,\n        yLeft: tooltipLeft + 12,\n        yLabel: formatPrice(y(tooltipData)),\n        xTop: yScale(y(minData[0])) + 4,\n        xLeft: tooltipLeft,\n        xLabel: formatDate(x(tooltipData))\n      })]\n    });\n  }\n\n}\n\nexport default withTooltip(Chart);","map":null,"metadata":{},"sourceType":"module"}