{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/syeefkarim/Developer/syeefkarim-2021/_includes/theme.js\";\n// import { useTheme } from \"next-themes\";\n// export const ThemeChanger = () => {\n//   const { theme, setTheme } = useTheme();\n//   return (\n//     <div>\n//       The current theme is: {theme}\n//       <button onClick={() => setTheme(\"light\")}>Light Mode</button>\n//       <button onClick={() => setTheme(\"dark\")}>Dark Mode</button>\n//     </div>\n//   );\n// };\nimport { useTheme } from \"next-themes\";\nimport { useState, useEffect } from \"react\";\nexport const ThemeChanger = () => {\n  const {\n    0: mounted,\n    1: setMounted\n  } = useState(false);\n  const {\n    theme,\n    setTheme\n  } = useTheme(); // When mounted on client, now we can show the UI\n\n  useEffect(() => setMounted(true), []);\n  if (!mounted) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"The current theme is: \", theme, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTheme(\"light\"),\n      children: \"Light Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTheme(\"dark\"),\n      children: \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/syeefkarim/Developer/syeefkarim-2021/_includes/theme.js"],"names":["useTheme","useState","useEffect","ThemeChanger","mounted","setMounted","theme","setTheme"],"mappings":";;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBP,QAAQ,EAApC,CAFgC,CAIhC;;AACAE,EAAAA,SAAS,CAAC,MAAMG,UAAU,CAAC,IAAD,CAAjB,EAAyB,EAAzB,CAAT;AAEA,MAAI,CAACD,OAAL,EAAc,OAAO,IAAP;AAEd,sBACE;AAAA,yCACyBE,KADzB,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,MAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhBM","sourcesContent":["// import { useTheme } from \"next-themes\";\n\n// export const ThemeChanger = () => {\n//   const { theme, setTheme } = useTheme();\n\n//   return (\n//     <div>\n//       The current theme is: {theme}\n//       <button onClick={() => setTheme(\"light\")}>Light Mode</button>\n//       <button onClick={() => setTheme(\"dark\")}>Dark Mode</button>\n//     </div>\n//   );\n// };\n\nimport { useTheme } from \"next-themes\";\nimport { useState, useEffect } from \"react\";\n\nexport const ThemeChanger = () => {\n  const [mounted, setMounted] = useState(false);\n  const { theme, setTheme } = useTheme();\n\n  // When mounted on client, now we can show the UI\n  useEffect(() => setMounted(true), []);\n\n  if (!mounted) return null;\n\n  return (\n    <div>\n      The current theme is: {theme}\n      <button onClick={() => setTheme(\"light\")}>Light Mode</button>\n      <button onClick={() => setTheme(\"dark\")}>Dark Mode</button>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}