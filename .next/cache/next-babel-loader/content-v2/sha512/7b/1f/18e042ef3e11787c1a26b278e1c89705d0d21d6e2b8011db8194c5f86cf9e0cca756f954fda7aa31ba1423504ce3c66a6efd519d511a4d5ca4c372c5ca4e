{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  var _window = window,\n      width = _window.innerWidth,\n      height = _window.innerHeight;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nexport default function useWindowDimensions() {\n  _s();\n\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowDimensions = _useState[0],\n      setWindowDimensions = _useState[1];\n\n  useEffect(function () {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"KMhrZwVvgl7LOxxFRIUIV79NJSw=\");","map":{"version":3,"sources":["/Users/syeefkarim/Developer/syeefkarim-2021/_includes/useWindowDimensions.js"],"names":["useState","useEffect","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","undefined","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,mBAAT,GAA+B;AAAA,gBACsBC,MADtB;AAAA,MACTC,KADS,WACrBC,UADqB;AAAA,MACWC,MADX,WACFC,WADE;AAE7B,SAAO;AACLH,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAED,eAAe,SAASE,mBAAT,GAA+B;AAAA;;AAAA,kBACIR,QAAQ,CAAC;AACvDI,IAAAA,KAAK,EAAEK,SADgD;AAEvDH,IAAAA,MAAM,EAAEG;AAF+C,GAAD,CADZ;AAAA,MACrCC,gBADqC;AAAA,MACnBC,mBADmB;;AAM5CV,EAAAA,SAAS,CAAC,YAAM;AACd,aAASW,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACT,mBAAmB,EAApB,CAAnB;AACD;;AAEDC,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO;AAAA,aAAMT,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAN;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD;;GAhBuBF,mB","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}